﻿@using MyProject.Web.Startup
@using static MyProject.Tasks.Task
@model MyProject.Web.Models.Tasks.IndexViewModel

@{
    ViewBag.Title = L("TaskList");
    ViewBag.ActiveMenu = "TaskList"; //Matches with the menu name in SimpleTaskAppNavigationProvider to highlight the menu item
}

@section scripts
{
    <environment names="Development">
        <script src="~/js/views/tasks/index.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/js/views/tasks/index.min.js"></script>
    </environment>
}

<h2>
    @L("TaskList")
</h2>

<div class="d-flex align-items-center position-absolute" style="top: 83px; right: 8px; gap: 10px;">
  <a class="btn btn-primary btn-sm" asp-action="Create">@L("AddNew")</a>

  @Html.DropDownListFor(
      model => model.SelectedTaskState,
      Model.GetTasksStateSelectListItems(LocalizationManager),
      new
      {
        @class = "form-control",
        id = "TaskStateCombobox",
        style = "width: auto; min-width: 150px;"
      })
</div>



<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <ul class="list-group w-100" id="TaskList">
                @foreach (var task in Model.Tasks)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="list-group-item-heading">@task.Title</h4>
                            <div class="list-group-item-text">
                                @task.CreationTime.ToString("yyyy-MM-dd HH:mm:ss") | @(task.AssignedPersonName ?? L("Unassigned"))
                            </div>
                        </div>
                        <span class="badge @(task.State == TaskState.Open ? "bg-primary" : "bg-success")">
                            @(task.State == TaskState.Open ? "Open" : "Completed")
                        </span>

                    </li>
                }
            </ul>
        </div>
    </div>
</div>

